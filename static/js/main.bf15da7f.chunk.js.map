{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,YAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAY,iBAAjB,UACI,qBACIC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAER,mCAAOL,EAAMG,QAAQG,KAArB,OACA,mCAAON,EAAMG,QAAQI,MAArB,YCNKC,G,MAAW,SAAAR,GAEpB,OACI,qBAAKC,UAAY,YAAjB,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCPxBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAY,SACZa,KAAK,SACLF,YAAaA,EACbG,SAAYF,MCqDLG,E,kDAtDb,aAAc,IAAD,8BACX,gBAcFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,SAdvC,EAAKC,MAAQ,CACXb,SAAW,GACXU,YAAc,IAJL,E,gEASO,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAWkB,S,+BAoBtC,MAE0BC,KAAKN,MAA7Bb,EAFF,EAEEA,SAASU,EAFX,EAEWA,YAEXU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAY,MAAjB,UACE,oBAAIA,UAAY,KAAhB,8BACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAgBe,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,SAAYoB,W,GAhDZI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bf15da7f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\n\r\nexport const Card = props => (\r\n    <div className = 'card-container'>\r\n        <img \r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} \r\n            alt=\"monster\"\r\n        />\r\n        <h1> { props.monster.name } </h1>\r\n        <h2> { props.monster.email } </h2>\r\n    </div>\r\n);","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.style.css';\r\n\r\n\r\nexport const CardList = props => {\r\n    // console.log(props)\r\n    return (\r\n        <div className = 'card-list'>\r\n            {props.monsters.map(monster => (\r\n                <Card key = {monster.id} monster = {monster}/>\r\n            ))}\r\n        </div>\r\n        )\r\n};","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className = \"search\"\r\n        type=\"search\" \r\n        placeholder={placeholder} \r\n        onChange = {handleChange}\r\n    />\r\n)","import React, { Component } from 'react'\n// import logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      searchField : ''\n    }\n  }\n\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters : users }))\n  }\n\n  handleChange =(e) => {\n    this.setState({ searchField : e.target.value })\n  }\n\n  // render() {\n  //   return (\n  //     <div className=\"App\">\n  //       <header className=\"App-header\">\n  //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //         <p>\n  //           { this.state.string }\n  //         </p>\n  //         <button onClick = {() => {this.setState({string : 'Bye ;)'})}}>Change Text!!!!</button>\n  //       </header>\n  //     </div>\n  // );\n\n  render(){\n    // destructuring : pulling properties and converting them into consts \n    const { monsters,searchField} = this.state ;\n\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())  \n    );\n\n    return (\n      <div className = \"App\">\n        <h1 className = \"h1\">Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange = {this.handleChange}\n        />\n        <CardList monsters = {filteredMonsters} />\n      </div>\n    )\n  }\n};\n\n\nexport default App;\n\n\n\n// <a\n// className=\"App-link\"\n// href=\"https://reactjs.org\"\n// target=\"_blank\"\n// rel=\"noopener noreferrer\"\n// >\n// Learn React\n// </a>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}